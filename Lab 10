from sklearn.datasets import load_breast_cancer
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA  # Added for dimensionality reduction
import matplotlib.pyplot as plt

# Load data
data = load_breast_cancer()
X = data.data
y = data.target  # Actual labels for comparison

# Standardize the data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Apply PCA for visualization (reduce to 2D)
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

# Perform K-Means clustering
kmeans = KMeans(n_clusters=2, random_state=42)
kmeans.fit(X_scaled)

# Plot results
plt.figure(figsize=(10, 6))
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=kmeans.labels_, cmap='viridis', alpha=0.6, edgecolor='k')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], 
            s=300, c='red', marker='X', label='Cluster Centers')

# Add actual labels for comparison (optional)
# plt.scatter(X_pca[:, 0], X_pca[:, 1], c=y, cmap='coolwarm', alpha=0.3, marker='.')

plt.title('K-Means Clustering on Breast Cancer Data (PCA-reduced)', fontsize=14)
plt.xlabel('Principal Component 1', fontsize=12)
plt.ylabel('Principal Component 2', fontsize=12)
plt.colorbar(label='Cluster Label')
plt.legend()
plt.grid(True, alpha=0.2)
plt.tight_layout()
plt.show()

# Print some metrics
from sklearn.metrics import silhouette_score
print(f"Silhouette Score: {silhouette_score(X_scaled, kmeans.labels_):.3f}")
print("Cluster distribution:", np.bincount(kmeans.labels_))
