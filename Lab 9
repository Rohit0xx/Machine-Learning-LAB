from sklearn.datasets import fetch_olivetti_faces
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score
import numpy as np
import matplotlib.pyplot as plt

# Load data
data = fetch_olivetti_faces()
X, y = data.data, data.target

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

# Train model
model = GaussianNB().fit(X_train, y_train)
y_pred = model.predict(X_test)

# Calculate accuracy
acc = accuracy_score(y_test, y_pred)
print(f"Accuracy: {acc:.2f}")

# Display first test image with prediction
plt.imshow(np.reshape(X_test[0], (64, 64)), cmap='gray')
plt.title(f"Predicted: {y_pred[0]}")
plt.axis('off')
plt.show()
